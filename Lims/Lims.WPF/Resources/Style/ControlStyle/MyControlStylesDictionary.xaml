<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:export="clr-namespace:Lims.WPF.Resources.UserControls.Export"
                    xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">



    <Style x:Key="OptionButtonStyle"
           TargetType="dx:SimpleButton">
        <Setter Property="Content"
                Value="···" />
        <Setter Property="Tag"
                Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl},Path=DataContext}" />
        <Setter Property="Command"
                Value="{Binding RelativeSource={RelativeSource  Mode=FindAncestor, AncestorType=UserControl},Path=DataContext.ExpandOptionCommand}" />
        <Setter Property="CommandParameter"
                Value="{Binding RelativeSource={RelativeSource Mode=Self}}" />
        <Setter Property="FontSize"
                Value="18" />
        <Setter Property="FontWeight"
                Value="Bold" />
    </Style>

    <Style x:Key="OptionMenuStyle"
           TargetType="ContextMenu">
        <Setter Property="Placement"
                Value="Bottom" />
        <Setter Property="Width"
                Value="150" />
        <Setter Property="FontSize"
                Value="12" />
        <Setter Property="Background"
                Value="#F0FFFF" />
        <Setter Property="DataContext"
                Value="{Binding PlacementTarget.Tag,RelativeSource={RelativeSource Self}}" />
    </Style>

    <Style x:Key="BtnInfoStyle"
           TargetType="Button">
        <Setter Property="Margin"
                Value="2,0" />
        <Setter Property="Width"
                Value="70" />
        <Setter Property="Height"
                Value="25" />
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Background"
                Value="#43a9c7" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="7,7,7,7"
                            SnapsToDevicePixels="True">
                        <TextBlock HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Foreground="{TemplateBinding Foreground}"
                                   Text="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="border"
                                    Property="Background"
                                    Value=" 	#7FFFD4" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="border"
                                    Property="Background"
                                    Value=" 	#FA8072" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SimpleBtnInfoStyle"
           TargetType="dx:SimpleButton">
        <Setter Property="Margin"
                Value="2,0" />
        <Setter Property="Width"
                Value="100" />
        <Setter Property="Height"
                Value="30" />
        <Setter Property="BorderThickness"
                Value="0" />
    </Style>

    <Style x:Key="DXTabItemHeaderStyle"
           TargetType="dx:DXTabItem">
        <Setter Property="Height"
                Value="25" />
        <Setter Property="Width"
                Value="120" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="Padding"
                Value="0" />
    </Style>

    <Style x:Key="DXTabAllItemsHeaderStyle"
           TargetType="dx:DXTabItem">
        <Setter Property="Height"
                Value="25" />
        <Setter Property="Width"
                Value="120" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="Padding"
                Value="0" />
    </Style>

    <Style x:Key="ProgressBarEditStyle"
           TargetType="dxe:ProgressBarEdit">
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Background"
                Value="{x:Null}" />
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="ContentDisplayMode"
                Value="Value" />
        <Setter Property="EditMode"
                Value="InplaceActive" />
        <Setter Property="IsPercent"
                Value="True" />
        <Setter Property="Minimum"
                Value="0" />
    </Style>

    <Style x:Key="menuItembtn"
           TargetType="dx:SimpleButton">
        <!--背景渐变-->
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="FontSize"
                Value="13" />
        <Setter Property="Padding"
                Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Cursor="Hand">
                        <Border x:Name="_Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="5" />

                        <!--ContentPresenter的作用就是显示内容，但Control类没有这个Content属性，所以在Control类之上写了一个ContentControl类，然后ContentPresenter(其显示依赖于ContentControl类)负责将ContentControl的Content属性显示出来。每个控件都有一个默认的ContentPresenter用于显示Content内容，这种控件为内容控件-->
                        <!--SnapsToDevicePixels获取或设置一个值，该值确定在呈现过程中，此元素的呈现是否应使用特定于设备的像素设置。 这是依赖项属性。-->
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <!--定义触发器-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.5,0"
                                                         EndPoint="0.5,1">
                                        <GradientStop Offset="0"
                                                      Color="#ffffff" />
                                        <GradientStop Offset="1"
                                                      Color="Transparent" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground"
                                    Value="#c9062c" />
                            <Setter Property="FontSize"
                                    Value="15" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                    <!--定义触发器_End-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="toolBarStyle"
           TargetType="dxb:ToolBarControl">
        <Setter Property="Height"
                Value="26" />
        <Setter Property="AllowQuickCustomization"
                Value="False" />
        <Setter Property="ShowBackground"
                Value="False" />
        <Setter Property="AllowCustomizationMenu"
                Value="False" />
        <Setter Property="BarItemDisplayMode"
                Value="ContentAndGlyph" />
        <Setter Property="Margin"
                Value="1,0" />
    </Style>

    <Style TargetType="dxb:ToolBarControl"
           x:Key="ToolBarControlInCellStyle">
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Stretch" />
        <Setter Property="AllowCustomizationMenu"
                Value="False" />
        <Setter Property="AllowQuickCustomization"
                Value="False" />
        <Setter Property="DataContext"
                Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=UserControl},Path=DataContext}" />
    </Style>

    <Style x:Key="slider"
           TargetType="dxe:CheckEdit">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxe:CheckEdit">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1"
                                                      To="MouseOver" />
                                    <VisualTransition From="MouseOver"
                                                      GeneratedDuration="0:0:0.15"
                                                      To="Normal" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="on">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="off">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Hidden" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="pressed">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="off">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.15"
                                                      To="Checked">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseIn" />
                                        </VisualTransition.GeneratedEasingFunction>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.15"
                                                             From="1"
                                                             To="1"
                                                             Storyboard.TargetProperty="(UIElement.Opacity)"
                                                             Storyboard.TargetName="on">
                                                <DoubleAnimation.EasingFunction>
                                                    <CircleEase EasingMode="EaseInOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="X"
                                                                           Storyboard.TargetName="translate">
                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                      Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.15"
                                                                      Value="52" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition GeneratedDuration="0:0:0.15"
                                                      To="Unchecked">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="X"
                                                                           Storyboard.TargetName="translate">
                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                      Value="52" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.15"
                                                                      Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="X"
                                                                       Storyboard.TargetName="translate">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="52" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="on">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="back"
                                Background="#26313137"
                                CornerRadius="8">
                            <Border CornerRadius="4"
                                    Margin="6">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1"
                                                         StartPoint="0.5,0">
                                        <GradientStop Color="#FF919293"
                                                      Offset="0" />
                                        <GradientStop Color="#FFBEBFBF"
                                                      Offset="1" />
                                        <GradientStop Color="#FF9FA1A2"
                                                      Offset="0.25" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border CornerRadius="3"
                                        Margin="1">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1"
                                                             StartPoint="0.5,0">
                                            <GradientStop Color="#FFCECECE"
                                                          Offset="0" />
                                            <GradientStop Color="White"
                                                          Offset="1" />
                                            <GradientStop Color="#FFECECED"
                                                          Offset="0.1" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                            </Border>
                        </Border>
                        <Grid x:Name="off_Copy"
                              HorizontalAlignment="Right"
                              Height="13"
                              Margin="0,1,23,0"
                              VerticalAlignment="Center"
                              Width="18"
                              FlowDirection="LeftToRight">
                            <Path Stretch="Fill"
                                  Fill="White"
                                  Data="F1 M 676.602,232.803C 676.576,233.415 676.257,233.734 675.645,233.76L 671.717,233.76C 671.105,233.734 670.786,233.415 670.76,232.803L 670.76,222.717C 670.786,222.105 671.105,221.786 671.717,221.76L 675.645,221.76C 676.257,221.786 676.576,222.105 676.602,222.717L 676.602,232.803 Z M 674.865,232.023L 674.865,223.497L 672.497,223.497L 672.497,232.023L 674.865,232.023 Z M 683.076,223.497L 679.918,223.497L 679.918,226.813L 682.602,226.813L 682.602,228.55L 679.918,228.55L 679.918,233.76L 678.181,233.76L 678.181,221.76L 683.076,221.76L 683.076,223.497 Z M 688.76,223.497L 685.602,223.497L 685.602,226.813L 688.286,226.813L 688.286,228.55L 685.602,228.55L 685.602,233.76L 683.865,233.76L 683.865,221.76L 688.76,221.76L 688.76,223.497 Z "
                                  HorizontalAlignment="Stretch"
                                  Margin="0,1,0,0"
                                  UseLayoutRounding="False"
                                  VerticalAlignment="Stretch" />
                            <Path Stretch="Fill"
                                  Fill="#FF9A9C9D"
                                  Data="F1 M 676.602,232.803C 676.576,233.415 676.257,233.734 675.645,233.76L 671.717,233.76C 671.105,233.734 670.786,233.415 670.76,232.803L 670.76,222.717C 670.786,222.105 671.105,221.786 671.717,221.76L 675.645,221.76C 676.257,221.786 676.576,222.105 676.602,222.717L 676.602,232.803 Z M 674.865,232.023L 674.865,223.497L 672.497,223.497L 672.497,232.023L 674.865,232.023 Z M 683.076,223.497L 679.918,223.497L 679.918,226.813L 682.602,226.813L 682.602,228.55L 679.918,228.55L 679.918,233.76L 678.181,233.76L 678.181,221.76L 683.076,221.76L 683.076,223.497 Z M 688.76,223.497L 685.602,223.497L 685.602,226.813L 688.286,226.813L 688.286,228.55L 685.602,228.55L 685.602,233.76L 683.865,233.76L 683.865,221.76L 688.76,221.76L 688.76,223.497 Z "
                                  HorizontalAlignment="Stretch"
                                  Margin="0,0,0,1"
                                  UseLayoutRounding="False"
                                  VerticalAlignment="Stretch" />
                        </Grid>
                        <Grid x:Name="on_Copy"
                              HorizontalAlignment="Left"
                              Height="13"
                              Margin="27,1,0,0"
                              VerticalAlignment="Center"
                              Width="14"
                              FlowDirection="LeftToRight">
                            <Path Stretch="Fill"
                                  Fill="White"
                                  Data="F1 M 614.727,178.803C 614.699,179.415 614.362,179.734 613.716,179.76L 609.57,179.76C 608.925,179.734 608.588,179.415 608.56,178.803L 608.56,168.717C 608.588,168.105 608.925,167.786 609.57,167.76L 613.716,167.76C 614.362,167.786 614.699,168.105 614.727,168.717L 614.727,178.803 Z M 612.893,178.023L 612.893,169.497L 610.393,169.497L 610.393,178.023L 612.893,178.023 Z M 622.56,179.76L 620.914,179.76L 618.104,172.208C 618.186,172.577 618.227,172.865 618.227,173.074L 618.227,179.76L 616.393,179.76L 616.393,167.76L 618.039,167.76L 620.849,175.159C 620.767,174.79 620.727,174.502 620.727,174.293L 620.727,167.76L 622.56,167.76L 622.56,179.76 Z "
                                  HorizontalAlignment="Stretch"
                                  Margin="0,1,0,0"
                                  UseLayoutRounding="False"
                                  VerticalAlignment="Stretch" />
                            <Path Stretch="Fill"
                                  Fill="#FF9A9C9D"
                                  Data="F1 M 614.727,178.803C 614.699,179.415 614.362,179.734 613.716,179.76L 609.57,179.76C 608.925,179.734 608.588,179.415 608.56,178.803L 608.56,168.717C 608.588,168.105 608.925,167.786 609.57,167.76L 613.716,167.76C 614.362,167.786 614.699,168.105 614.727,168.717L 614.727,178.803 Z M 612.893,178.023L 612.893,169.497L 610.393,169.497L 610.393,178.023L 612.893,178.023 Z M 622.56,179.76L 620.914,179.76L 618.104,172.208C 618.186,172.577 618.227,172.865 618.227,173.074L 618.227,179.76L 616.393,179.76L 616.393,167.76L 618.039,167.76L 620.849,175.159C 620.767,174.79 620.727,174.502 620.727,174.293L 620.727,167.76L 622.56,167.76L 622.56,179.76 Z "
                                  HorizontalAlignment="Stretch"
                                  Margin="0,0,0,1"
                                  UseLayoutRounding="False"
                                  VerticalAlignment="Stretch" />
                        </Grid>
                        <Grid Margin="8">
                            <Grid x:Name="thumb"
                                  Width="52"
                                  HorizontalAlignment="Left">
                                <Border x:Name="off"
                                        CornerRadius="3">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1"
                                                             StartPoint="0.5,0">
                                            <GradientStop Color="#FFB2B2B2"
                                                          Offset="0" />
                                            <GradientStop Color="#FFA1A1A1"
                                                          Offset="1" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border CornerRadius="2"
                                            Margin="1"
                                            BorderThickness="0,1,0,0"
                                            BorderBrush="#FFE5E5E5">
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0.5,1"
                                                                 StartPoint="0.5,0">
                                                <GradientStop Color="#FFD9D9D9"
                                                              Offset="0" />
                                                <GradientStop Color="#FFCACACA"
                                                              Offset="1" />
                                            </LinearGradientBrush>
                                        </Border.Background>
                                    </Border>
                                </Border>
                                <Border x:Name="on"
                                        CornerRadius="3"
                                        Opacity="0">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1"
                                                             StartPoint="0.5,0">
                                            <GradientStop Color="#FF7E9BCD"
                                                          Offset="0" />
                                            <GradientStop Color="#FF6383BD"
                                                          Offset="1" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border CornerRadius="2"
                                            Margin="1"
                                            BorderThickness="0,1,0,0"
                                            BorderBrush="#FFBFD8F3">
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0.5,1"
                                                                 StartPoint="0.5,0">
                                                <GradientStop Color="#FFA1BEE5"
                                                              Offset="0" />
                                                <GradientStop Color="#FF85A3D0"
                                                              Offset="1" />
                                            </LinearGradientBrush>
                                        </Border.Background>
                                    </Border>
                                </Border>
                                <Border x:Name="pressed"
                                        CornerRadius="3"
                                        Opacity="0">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1"
                                                             StartPoint="0.5,0">
                                            <GradientStop Color="#FFB2B2B2"
                                                          Offset="1" />
                                            <GradientStop Color="#FF8B8B8B" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border CornerRadius="2"
                                            Margin="1"
                                            BorderThickness="0"
                                            BorderBrush="#FFE5E5E5">
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0.5,1"
                                                                 StartPoint="0.5,0">
                                                <GradientStop Color="Silver"
                                                              Offset="1" />
                                                <GradientStop Color="#FFA7A7A7" />
                                            </LinearGradientBrush>
                                        </Border.Background>
                                    </Border>
                                </Border>
                                <Grid.RenderTransform>
                                    <TranslateTransform x:Name="translate" />
                                </Grid.RenderTransform>
                            </Grid>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="dx:SimpleButton"
           x:Key="ResizeTaskListViewButtonStyle">
        <Setter Property="Margin"
                Value="2" />
        <Setter Property="Command"
                Value="{Binding ResizeTaskListViewCommand}" />
        <Setter Property="Content"
                Value="{Binding IsTaskListViewMax, Converter={StaticResource BooleanToContentConverter}, ConverterParameter='经典窗口|新式窗口',Mode=TwoWay}" />
    </Style>

    <!--#region samplebuttonstyle-->
    <Style x:Key="RefreshSampleDatasButtonStyle"
           TargetType="dxb:BarButtonItem">
        <Setter Property="Glyph"
                Value="{dx:DXImage 'Images/Spreadsheet/RefreshAllPivotTable_16x16.png'}" />
        <Setter Property="Command"
                Value="{Binding RefreshSampleDatasCommand}" />
        <Setter Property="ToolTip"
                Value="刷新" />
        <Setter Property="KeyGesture"
                Value="F5" />
        <Setter Property="Content"
                Value="刷新" />
    </Style>

    <Style
        x:Key="RefreshItemDatasButtonStyle"
        TargetType="dxb:BarButtonItem">
        <Setter
            Property="Glyph"
            Value="{dx:DXImage 'Images/Spreadsheet/RefreshAllPivotTable_16x16.png'}" />
        <Setter
            Property="Command"
            Value="{Binding RefreshItemDatasCommand}" />
        <Setter
            Property="CommandParameter"
            Value="{Binding FocusedSample}" />




        <Setter
            Property="ToolTip"
            Value="刷新" />
        <Setter
            Property="KeyGesture"
            Value="F5" />
        <Setter
            Property="Content"
            Value="刷新" />
    </Style>





    <Style x:Key="SearchByCurrentCellValueButtonStyle"
           TargetType="dxb:BarButtonItem">
        <Setter Property="Glyph"
                Value="{dx:DXImage 'Images/Find/Find_16x16.png'}" />
        <Setter Property="Command"
                Value="{Binding SearchByCurrentCellValueCommand}" />
        <Setter Property="CommandParameter"
                Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxb:PopupMenu}, Path=PlacementTarget}" />
        <Setter Property="ToolTip"
                Value="搜索" />
        <Setter Property="KeyGesture"
                Value="F1" />
        <Setter Property="Content"
                Value="搜索" />
    </Style>

    <Style x:Key="OnlyViewUrgentButtonStyle"
           TargetType="dxb:BarCheckItem">
        <Setter Property="Glyph"
                Value="{Binding Converter={StaticResource BooleanToContentConverter}, Path=IsChecked,RelativeSource={RelativeSource Mode=Self},  ConverterParameter='pack://application:,,,/DevExpress.Images.v24.2;component/Images/Business Objects/BOContact_16x16.png|pack://application:,,,/DevExpress.Images.v24.2;component/Images/Miscellaneous/ViewOnWeb_16x16.png'}" />
        <Setter Property="KeyGesture"
                Value="F4" />
        <Setter Property="IsChecked"
                Value="{Binding OnlyViewUrgent}" />
        <Setter Property="Content"
                Value="{Binding Converter={StaticResource BooleanToContentConverter}, Path=IsChecked,RelativeSource={RelativeSource Mode=Self},  ConverterParameter='只看加急|查看所有'}" />
    </Style>
    <Style x:Key="PrintSelectedSamplesButtonStyle"
           TargetType="dxb:BarButtonItem">
        <Setter Property="Glyph"
                Value="{dx:DXImage 'Images/Print/PrintArea_16x16.png'}" />
        <Setter Property="Command"
                Value="{Binding PrintTableViewCommand}" />
        <Setter Property="CommandParameter"
                Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxb:PopupMenu}, Path=PlacementTarget}" />
        <Setter Property="ToolTip"
                Value="打印勾选项" />
        <Setter Property="KeyGesture"
                Value="F8" />
        <Setter Property="Content"
                Value="打印勾选项" />
        <Setter Property="IsEnabled"
                Value="{Binding SelectedSamples.Count}" />
    </Style>
    <Style x:Key="ExportSelectedSamplesButtonStyle"
           TargetType="dxb:BarButtonItem">
        <Setter Property="Glyph"
                Value="{dx:DXImage 'Images/Export/ExportToXLSX_32x32.png'}" />
        <Setter Property="Command"
                Value="{DXCommand '$export:DemoModuleExportHelper.ExportToXlsx(@parameter)'}" />
        <Setter Property="CommandParameter"
                Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxb:PopupMenu}, Path=PlacementTarget}" />
        <Setter Property="ToolTip"
                Value="导出到excel" />
        <Setter Property="Content"
                Value="导出到excel" />
        <Setter Property="IsEnabled"
                Value="{Binding SelectedSamples.Count}" />
    </Style>

    <Style x:Key="ShowMoistureContentAndDensityButtonStyle"
           TargetType="dxb:BarButtonItem">
        <Setter Property="Glyph"
                Value="{dx:DXImage 'Images/XAF/Action_Pivot_Printing_Preview.png'}" />
        <Setter Property="Command"
                Value="{Binding ShowMoistureContentAndDensityCommand}" />
        <Setter Property="ToolTip"
                Value="查看选中样品水分/密度" />
        <Setter Property="Content"
            Value="查看选中样品水分/密度" />
        <Setter
            Property="IsEnabled"
            Value="{Binding SelectedSamples.Count}" />
    </Style>

    <Style x:Key="CopySampleInfoToClipBoradButtonStyle"
           TargetType="dxb:BarButtonItem">
        <Setter Property="Glyph"
                Value="{dx:DXImage 'Images/Data/CopyModelDifferences_16x16.png'}" />
        <Setter Property="Command"
                Value="{Binding CopySampleInfoToClipBoradCommand}" />
        <Setter Property="CommandParameter"
                Value="{Binding SelectedSamples}" />
        <Setter Property="ToolTip"
                Value="拷贝基本信息到剪切板" />
        <Setter Property="Content"
                Value="拷贝基本信息到剪切板" />
        <Setter Property="IsEnabled"
                Value="{Binding SelectedSamples.Count}" />
    </Style>

    <Style x:Key="ShowReportsDataPreviewButtonStyle"
           TargetType="dxb:BarButtonItem">
        <Setter Property="Glyph"
                Value="{dx:DXImage 'Images/Business Objects/BOReport2_16x16.png'}" />
        <Setter Property="Command"
                Value="{Binding ShowReportsDataPreviewCommand}" />
        <Setter Property="CommandParameter"
                Value="{Binding SelectedSamples}" />
        <Setter Property="ToolTip"
                Value="预览选中项数据页" />
        <Setter Property="Content"
                Value="预览选中项数据页" />
        <Setter Property="IsEnabled"
                Value="{Binding SelectedSamples.Count}" />
    </Style>
    <!--#endregion-->
    <!--#region -->
    <Style x:Key="PrintSelectedTaskDatasButtonStyle"
           TargetType="dxb:BarButtonItem">
        <Setter Property="Glyph"
                Value="{dx:DXImage 'Images/Print/PrintArea_16x16.png'}" />
        <Setter Property="Command"
                Value="{Binding PrintTableViewCommand}" />
        <Setter Property="CommandParameter"
                Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxb:PopupMenu}, Path=PlacementTarget}" />
        <Setter Property="ToolTip"
                Value="打印勾选项" />
        <Setter Property="KeyGesture"
                Value="F8" />
        <Setter Property="Content"
                Value="打印勾选项" />
        <Setter Property="IsEnabled"
                Value="{Binding SelectedTaskDatas.Count}" />
    </Style>

    <Style x:Key="ExportSelectedTaskDatasButtonStyle"
           TargetType="dxb:BarButtonItem">
        <Setter Property="Glyph"
                Value="{dx:DXImage 'Images/Export/ExportToXLSX_32x32.png'}" />
        <Setter Property="Command"
                Value="{DXCommand '$export:DemoModuleExportHelper.ExportToXlsx(@parameter)'}" />
        <Setter Property="CommandParameter"
                Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxb:PopupMenu}, Path=PlacementTarget}" />
        <Setter Property="ToolTip"
                Value="导出到excel" />
        <Setter Property="Content"
                Value="导出到excel" />
        <Setter Property="IsEnabled"
                Value="{Binding SelectedTaskDatas.Count}" />
    </Style>



    <!--#endregion-->


</ResourceDictionary>